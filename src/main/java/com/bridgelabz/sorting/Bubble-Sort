1. Bubble Sort

Bubble Sort is a simple sorting algorithm that repeatedly compares adjacent elements and
swaps them if they are in the wrong order. This process continues until the entire array is
sorted.

Concept:
● Repeatedly swaps adjacent elements if they are in the wrong order.
● The largest element bubbles to the end in each iteration.

Working Mechanism:
1. Start at the beginning of the array and compare the first two elements.
2. If the first element is greater than the second, swap them.
3. Move to the next adjacent pair and repeat the comparison and swapping process.
4. After completing one full pass, the largest element &quot;bubbles up&quot; to its correct position
at the end of the array.
5. Repeat the process for the remaining unsorted elements until no swaps are needed.

Performance Analysis:
● Best Case (Already Sorted): O(n) (One pass without swaps)
● Average Case: O(n²) (Nested loops for comparison and swapping)
● Worst Case (Reverse Sorted): O(n²)
● Space Complexity: O(1) (In-place sorting)
● Stability: Stable (Preserves the order of equal elements)

2.Use Cases:
● Suitable for small datasets or when elements are nearly sorted.
● Not efficient for large datasets due to its quadratic time complexity.

Time Complexity:
● Best Case (Already Sorted): O(n)
● Average Case: O(n²)
● Worst Case (Reverse Sorted): O(n²)
● Space Complexity: O(1) (In-place Sorting)